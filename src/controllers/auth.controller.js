// src/controllers/auth.controller.js
const AuthService = require("../services/auth.service");

class AuthController {
    static async getMe(req, res) {
        try {
            console.log("üìå D·ªØ li·ªáu nh·∫≠n trong /me:", req.user); // ‚úÖ Ki·ªÉm tra log
            if (!req.user) {
                return res.status(401).json({ error: "Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng." });
            }

            res.status(200).json({
                userId: req.user.id,
                roles: req.user.roles,
                message: "L·∫•y th√¥ng tin ng∆∞·ªùi d√πng th√†nh c√¥ng."
            });
        } catch (error) {
            console.error("‚ùå L·ªói trong getMe:", error);
            res.status(500).json({ error: "L·ªói m√°y ch·ªß." });
        }
    }

    static async forgotPassword(req, res) {
        try {
            if (!req.body?.email) {
                return res.status(400).json({ error: 'Email l√† b·∫Øt bu·ªôc' });
            }
            const { email } = req.body;
            await AuthService.forgotPassword(email);
            res.status(200).json({ message: 'Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i' });
        } catch (error) {
            res.status(400).json({ error: error.message });
        }
    }

    static async resetPassword(req, res) {
        try {
            const { resetCode, newPassword } = req.body;
            await AuthService.resetPassword(resetCode, newPassword);
            res.status(200).json({ message: "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t" });
        } catch (error) {
            res.status(400).json({ error: error.message });
        }
    }

    static async logout(req, res) {
        try {
            await AuthService.logout(req.user);
            res.status(200).json({ message: 'ƒêƒÉng xu·∫•t th√†nh c√¥ng' });
        } catch (error) {
            res.status(500).json({ error: error.message });
        }
    }

    static async register(req, res) {
        console.log("üìå H√†m register() ƒë√£ ƒë∆∞·ª£c g·ªçi!");
        try {
            console.log("Header nh·∫≠n ƒë∆∞·ª£c:", req.headers); // ‚úÖ Ki·ªÉm tra headers
            console.log("Body nh·∫≠n ƒë∆∞·ª£c t·∫°i controller:", req.body); // ‚úÖ Ki·ªÉm tra d·ªØ li·ªáu

            if (!req.body?.fullName || !req.body?.email || !req.body?.password) {
                return res.status(400).json({ error: "H·ªç t√™n, email v√† m·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc" });
            }

            const user = await AuthService.register(req.body);
            res.status(201).json(user);
        } catch (error) {
            res.status(400).json({ error: error.message });
        }
    }

    static async login(req, res) {
        try {
            if (!req.body?.email || !req.body?.password) {
                return res.status(400).json({ error: 'Email v√† m·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc' });
            }
            const { email, password } = req.body;
            const { token, refreshToken, user } = await AuthService.login(email, password);
            res.status(200).json({ token, refreshToken, user });
        } catch (error) {
            res.status(401).json({ error: error.message });
        }
    }
}

module.exports = AuthController;